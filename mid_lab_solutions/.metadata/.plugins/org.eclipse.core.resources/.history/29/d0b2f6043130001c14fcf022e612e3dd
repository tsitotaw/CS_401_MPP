package question2;

import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Admin {
	// Returns phone numbers (in sorted order) of the Library Members who have ever
	// checked out the specified lending item
	/**
	 * It must return a sorted list of the phone numbers of those library members
	 * who have checked out, at least once, the LendingItem item that is passed in
	 * as input. In order to compare the input item with the LendingItems that you
	 * can find in library members' checkout records, you will have to override
	 * equals in an appropriate way (the equals method is not shown in the diagram â€“
	 * you will need to decide which class(es) need to override equals)
	 * 
	 * @param members
	 * @param item
	 * @return
	 */
	public static List<String> getPhoneNums(LibraryMember[] members, LendingItem item) {
		List<String> phoneNums = new ArrayList<>();
		for (LibraryMember member : members) {
			List<CheckoutRecordEntry> entries = member.getCheckoutRecord().getCheckoutRecordEntryList();
			if (entries != null && entries.size() > 0) {
				if (isItemFound(entries, item)) {
					phoneNums.add(member.getPhone());
				}
			}
		}
		Collections.sort(phoneNums);
		return phoneNums;
	}

	/**
	 * loop through library members
	 * find the checkoutentries
	 * check if the item is found in anyofthestream
	 * 
	 */
	public static List<String> getPhoneNumsStream(LibraryMember[] members, LendingItem item) {
		List<String> phoneNums = new ArrayList<>();
		for (LibraryMember member : members) {
			Optional<CheckoutRecordEntry> checkoutEntry = member.getCheckoutRecord().getCheckoutRecordEntryList().stream()
					.filter(entry -> entry.getLendingItem().equals(item)).findAny();//.collect(Collectors.toList());
			
			if(checkoutEntry.isPresent()) {
				phoneNums.add(member.getPhone());
			}
		}
		Collections.sort(phoneNums);
		//Arrays.stream(members)
		
	}

	private static boolean isItemFound(List<CheckoutRecordEntry> entries, LendingItem item) {
		for (CheckoutRecordEntry entry : entries) {
			if (entry.getLendingItem().equals(item)) {
				return true;
			}
		}
		return false;
	}
}
