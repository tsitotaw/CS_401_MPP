package lambdalib;

import java.util.Comparator;
import java.util.List;
import java.util.function.BiFunction;
import java.util.stream.Collectors;

import quizclasses.Employee;
import quizclasses.Pair;


public class LambdaLibrary {
	public final static String IMPLEMENT = "implement!";
	
	//sample query
	public final static TriFunction<List<Employee>, Integer, Integer, List<Employee>> SAMPLE
	   = (list, namelength, year) -> list.stream()
	                                     .filter(e -> e.getName().length() > namelength)
	                                     .filter(e -> e.getYearOfBirth() > year)
	                                     .collect(Collectors.toList());
	   
	   
    public static final TriFunction<List<Employee>, Integer, Integer, List<Employee>> EMPLOYEE_LESS_20000 = 
    	(list, lowerSalary, upperSalary) ->	list.stream();
//    	.filter(x -> x.getSalary() > lowerSalary && x.getSalary() < upperSalary)
//			.sorted(Comparator.comparing(Employee::getName)
//					.thenComparing(Comparator.comparing(Employee::getSalary).reversed()))
//			.map(x -> new Pair(x.getName(), x.getSalary()))
//			.collect(Collectors.toList());
}
